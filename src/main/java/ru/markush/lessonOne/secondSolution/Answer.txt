1. Нет класса Engine (создаем или делаем String)
2. В классе Lorry наследуются интерфейсы - так нельзя (extends Car и implements Moveable, Stopable)
3. В классе Car паблик поля, соблюдаем инкапсуляцию и делаем поля private
4. В классе Car есть метод protected void start() зачем protected.
Аннотации @Override использовать не обязательно, но желательно, для проверки
5. В классе Lorry переопределен метод start() из класса Car с модификатором protected, для чего protected?
я бы сделал public.
6. В классе LightWeightCar переопределен метод с модификатором доступа default для чего?
Если мы будем использовать класс вне пакета, то доступа к методу не будет.
7. LightWeightCar не использован интерфейс Stopable машина не останавливается?)
8. Можно чтоб Lorry расширяла класс LightWeightCar а не Car, ведь там все одинаково.
9. В классе Lorry у метода был модификатор доступа default, абстрактные методы они всегда паблик.
